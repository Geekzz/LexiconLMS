@page "/create-activity/{ModuleId:int}"
@using LMS.Blazor.Client.Services
@using LMS.Shared.DTOs.Create
@rendermode InteractiveWebAssembly
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="card lexicon-rounded">
        <div class="card-body">
            <h4 class="card-title">Create New Activity for Module ID: @ModuleId</h4>
            <EditForm Model="NewActivity" OnValidSubmit="AddActivity" FormName="createActivityForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="activityName" class="form-label">Activity Name</label>
                    <InputText id="activityName" class="form-control" @bind-Value="NewActivity.Name" />
                    <ValidationMessage For="@(() => NewActivity.Name)" />
                </div>

                <div class="mb-3">
                    <label for="activityDescription" class="form-label">Description</label>
                    <InputTextArea id="activityDescription" class="form-control" @bind-Value="NewActivity.Description" />
                    <ValidationMessage For="@(() => NewActivity.Description)" />
                </div>

                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <InputDate id="startDate" class="form-control" @bind-Value="NewActivity.StartDate" />
                    <ValidationMessage For="@(() => NewActivity.StartDate)" />
                </div>

                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <InputDate id="endDate" class="form-control" @bind-Value="NewActivity.EndDate" />
                    <ValidationMessage For="@(() => NewActivity.EndDate)" />
                </div>

                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn lexicon-button button-fontsize">Create Activity</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ModuleId { set; get; }

    [Inject]
    private IApiService _apiService { get; set; } = default!;

    private ActivityCreateDto NewActivity { get; set; } = new ActivityCreateDto();

    protected override async Task OnInitializedAsync()
    {
        NewActivity.ModuleId = ModuleId;
        NewActivity.StartDate = DateTime.Now;
        NewActivity.EndDate = DateTime.Now;
    }

    private async Task AddActivity()
    {
        try
        {
            NewActivity = await _apiService.PostAsync<ActivityCreateDto, ActivityCreateDto>($"activities", NewActivity);
            // NavigationManager.NavigateTo("/module-completed");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
