@page "/edit-course"
@page "/edit-course/{courseId:int}"
@rendermode InteractiveWebAssembly
@using LMS.Blazor.Client.Services
@using LMS.Shared.DTOs.Read
@using LMS.Shared.DTOs.Update
@using Microsoft.AspNetCore.Components.Authorization
@using LMS.Shared.DTOs
@using Microsoft.AspNetCore.Authorization
@using LMS.Blazor.Client.Components.Home

@if (course == null)
{
    <div class="d-flex w-100 h-100 justify-content-center align-items-center">
        <div class="loader"></div>
    </div>
}
else
{
    <h3>Edit course - @CourseId</h3>
    <p>@course.Name</p>
}

@if(@course != null) {
    <h2>@course.Name</h2>
}
else {
    <h2>NULL</h2>
}

<h2>hej</h2>

@code {
    [Inject]
    private IApiService _apiService { get; set; } = default!;
    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    [Parameter]
    public int CourseId { get; set; }
    private CourseDto? course;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                if (_apiService != null)
                {
                    course = await _apiService.CallApiGetAsync<CourseDto>($"courses/{CourseId}");
                    StateHasChanged();
                }
                else
                {
                    Console.WriteLine("ApiService is not initialized.");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error while fetching courses: {ex.Message}");
            }
        }
    }
}