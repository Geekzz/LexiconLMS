@page "/Profile"
@rendermode InteractiveWebAssembly
@using LMS.Blazor.Client.Services
@using LMS.Shared.DTOs.Read
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@if (course == null && user == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="container-lg">

		<div class="text-center lexicon-primary d-flex p-2 justify-content-around align-items-center mb-4 mt-4 lexicon-rounded">
			<div>
				<h2>@user.FirstName @user.LastName</h2>
				<h3>@user.Email</h3>
			</div>
			<button class="nav-link btn nav-button lexicon-button lexicon-button-special button-fontsize" href="">ÄNDRA LÖSENORD</button>
		</div>

		<div class="text-center lexicon-primary lexicon-rounded mx-4">

			<div class="row">
				<div class="col">
					<h4 class="lexicon-text">Kursnamn</h4>
				</div>
				<div class="col">
					<h4 class="lexicon-text">Startdatum</h4>
				</div>
				<div class="col">
					<h4 class="lexicon-text">Slutdatum</h4>
				</div>
				<div class="col">
				</div>

			</div>

			<div class="row">
				<div class="col">
					<h3>@course.Name</h3>
				</div>
				<div class="col">
					<h3>@course.StartDate.ToString("yyyy-MM-dd")</h3>
				</div>
				<div class="col">
					<h3>@course.EndDate.ToString("yyyy-MM-dd")</h3>
				</div>

				<div class="col">
					<div class="d-flex justify-content-center align-items-end ">
						<a class="btn lexicon-button-tiny button-fontsize-tiny" href="courseoverview">Läs mer</a>

					</div>
				</div>
			</div>

			<hr />


			<div class="row">
				<div class="col">
					<h4 class="lexicon-text">Modulnamn</h4>
				</div>
				<div class="col">
					<h4 class="lexicon-text">Startdatum</h4>
				</div>
				<div class="col">
					<h4 class="lexicon-text">Slutdatum</h4>
				</div>
				<div class="col">
				</div>
			</div>

			@foreach (var module in course.Modules)
			{
				<div class="row">
					<div class="col">
						<h3>@module.Name</h3>
					</div>
					<div class="col">
						<h3>@module.StartDate.ToString("yyyy-MM-dd")</h3>
					</div>
					<div class="col">
						<h3>@module.EndDate.ToString("yyyy-MM-dd")</h3>
					</div>
					<div class="col">
					</div>
				</div>
			}

		</div>


	</div>
}

@code {
	[Inject]
	private IApiService _apiService { get; set; } = default!;
	[Inject]
	private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;


	private CourseDto? course;
	private UserDto? user;

	protected async override Task OnInitializedAsync()
	{
		try
		{
			// Retrieve user's claims
			var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
			var claimsPrincipal = authState.User;

			if (claimsPrincipal.Identity?.IsAuthenticated == true)
			{
				user = (await _apiService.GetAsync<UserDto>($"userInfo"));
				course = await _apiService.GetAsync<CourseDto>("courseForUser");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error: {ex.Message}");
		}

	}
}