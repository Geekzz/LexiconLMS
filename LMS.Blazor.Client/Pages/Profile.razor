@page "/Profile"
@rendermode InteractiveWebAssembly
@using LMS.Blazor.Client.Services
@using LMS.Shared.DTOs.Read
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@if (course == null && user == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="container-lg">

		<div class="text-center lexicon-primary d-flex p-2 justify-content-around align-items-center mb-4 mt-4">
			<div>
				<h1>@user.FirstName @user.LastName</h1>
				<h2>@user.Email</h2>
			</div>
			<button class="nav-link btn nav-button lexicon-button button-fontsize" href="">ÄNDRA LÖSENORD</button>
		</div>

		<div class="text-center lexicon-primary">
			<div class="row">
				<div class="col">
					<h3>@course.Name</h3>
				</div>
				<div class="col">
					<h2>@course.StartDate.Year-@course.StartDate.Month-@course.StartDate.Day</h2>
				</div>
				<div class="col">
					<h2>@course.EndDate</h2>
				</div>
			</div>
		</div>

	</div>
}

@code {
	[Inject]
	private IApiService _apiService { get; set; } = default!;
	[Inject]
	private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;


	private CourseDto? course;
	private UserDto? user;

	protected async override Task OnInitializedAsync()
	{
		try
		{
			// Retrieve user's claims
			var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
			var claimsPrincipal = authState.User;

			if (claimsPrincipal.Identity?.IsAuthenticated == true)
			{
				user = (await _apiService.CallApiGetAsync<UserDto>($"userInfo"));
				course = await _apiService.CallApiGetAsync<CourseDto>("courseForUser");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error: {ex.Message}");
		}

	}
}